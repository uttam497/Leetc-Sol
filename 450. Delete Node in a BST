/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode deleteNode(TreeNode root, int key) {
         if(root==null)
        {
            return null;
        }
       else if(root.val>key)
        {
            root.left=deleteNode(root.left,key);
            return root;
        }
        else if(root.val==key)
        {
            if(root.left==null && root.right==null)
            {
                return null;
            }
            if(root.left!=null && root.right==null)
            {
                TreeNode temp=root.left;
                return temp;
            }
            if(root.left==null && root.right!=null)
            {
                TreeNode temp=root.right;
                return temp;
            }
            TreeNode replace=root.right;
            while(replace.left!=null)
            {
                replace=replace.left;
            }
            root.val=replace.val;
            root.right=deleteNode(root.right,replace.val);
            return root;
        }
        else{
            root.right=deleteNode(root.right,key);
            return root;
        }
    }
}
