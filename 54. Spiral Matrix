class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        int m=matrix.length;
        int n=matrix[0].length;
        List<Integer> ar=new ArrayList<Integer>();
        int top=0,down=m-1,left=0,right=n-1;
        int dir=0;
        while(top<=down && left<=right)
        {
            if(dir==0)
            {
                for(int i=left;i<=right;i++)
                {
                    ar.add(matrix[top][i]);
                    
                }
                top=top+1;
             }
            else if(dir==1)
            {
                for(int i=top;i<=down;i++)
                {
                    ar.add(matrix[i][right]);
                    
                }
                right--;
             }
           else if(dir==2)
            {
                for(int i=right;i>=left;i--)
                {
                    ar.add(matrix[down][i]);
                    
                }
                down=down-1;
             }
           else if(dir==3)
            {
                for(int i=down;i>=top;i--)
                {
                    ar.add(matrix[i][left]);
                    
                }
                left=left+1;
             }
            dir=(dir+1)%4;
        }
        return ar;
    }
}
